{-| {{= it.doc }}
{{? it.requiredParams }}
__Required Parameters__

{{~ it.requiredParams :p }}* `{{= p.key }}` __:__ `{{= p.value.type }}`
{{~}}
{{?}}
-}

{{= it.name }} :
  {{~ it.requiredParams :p }}
    {{= p.value.type }} ->
  {{~}}
  {{? it.optionalParams.length }}
    ( {{= it.optionsName }} -> {{= it.optionsName }} ) ->
  {{?}}
    AWS.Request (AWS.Response {{= it.output.type }})

{{= it.name }} {{~ it.requiredParams :p }}{{= p.key }} {{~}}{{? it.optionalParams.length }}setOptions {{?}}=
    {{? it.input }}
    let
        requestInput = {{= it.input.type }}
            {{~ it.input.members :m }}
            {{= m.required ? m.key : `options.${m.key}` }}
            {{~}}
        {{? it.optionalParams.length }}
        options = setOptions ({{= it.optionsName }} {{= it.optionalParams.map(() => 'Nothing').join(' ') }})
        {{?}}
    in
    {{?}}
        AWS.Http.unsignedRequest
            "{{= it.actionName }}"
            "{{= it.http.method }}"
            {{= it.requestPath }}

            {{? it.protocol === 'query' }}
            ([("Action", "{{= it.actionName }}")]
            {{? it.input }}
                |> {{= it.input.queryEncoder("") }} requestInput
            {{?}}
            )
            {{?? true }}
            []
            {{?}}

            {{? it.protocol === 'json' && it.input }}
            (requestInput
                |> {{= it.input.jsonEncoder }}
                |> AWS.Http.JsonBody
            )
            {{?? true }}
            AWS.Http.NoBody
            {{?}}

            (AWS.Decode.responseWrapperDecoder
                "{{= it.actionName }}"
                {{? it.outputResultWrapper === "()" }}
                (AWS.Decode.FixedResult ())
                {{?? true }}
                (AWS.Decode.ResultDecoder "{{= it.outputResultWrapper }}" {{= it.output.decoder }})
                {{?}}
            )
            |> AWS.UnsignedRequest


{{? it.optionalParams.length }}
{-| Options for a {{= it.name }} request
-}
type alias {{= it.optionsName }} =
    {
    {{= it.optionalParams.map(p => `${p.key} : Maybe ${p.value.type}`).join(',') }}
    }
{{?}}
